nucleosomes = ['all', 'nfr', 'mono', 'di']
for nucleosome in nucleosomes:
    rule alignment_sieve:
        name: f"alignment_sieve_{nucleosome}"
        conda: '../envs/deeptools_env.yml'
        log: f"logs/deeptools_alignment_sieve_{{sample}}_{nucleosome}.log"
        threads: 4

        input:
            bam             = 'results/samtools/{sample}_noMT_sorted.bam',
            index           = 'results/samtools/{sample}_noMT_sorted.bam.bai'

        output:
            sieved          = f'results/deeptools/{{sample}}_{nucleosome}_sieved.bam' 

        params:
            blacklist       = config['blacklist_file'],
            minFragLength   = config['deeptools'][f'{nucleosome}']['minFragmentLength'],
            maxFragLength   = config['deeptools'][f'{nucleosome}']['maxFragmentLength']

        shell:
            '''
            alignmentSieve -b {input.bam} -o {output.sieved} \
                    --numberOfProcessors {threads} \
                    --ATACshift \
                    --minFragmentLength {params.minFragLength} \
                    --maxFragmentLength {params.maxFragLength} \
                    --blackListFileName {params.blacklist} > {log} 2>&1
            '''


rule samtools_sort_sieved:
    conda: '../envs/samtools_env.yml'
    log: 'logs/samtools_sort_sieved_{sample}_{nucleosome}.log'
    threads: 2

    input:
        sieved          = 'results/deeptools/{sample}_{nucleosome}_sieved.bam' 

    output:
        sieved_sorted   = 'results/deeptools/{sample}_{nucleosome}_sieved_sorted.bam'

    shell:
        '''
        samtools sort {input.sieved} -o {output.sieved_sorted} --threads {threads} > {log} 2>&1
        '''


rule samtools_sieved_idx:
    conda: '../envs/samtools_env.yml'
    log: 'logs/samtools_idx_sieved_{sample}_{nucleosome}.log'
    threads: 2

    input:
        sieved_sorted   = 'results/deeptools/{sample}_{nucleosome}_sieved_sorted.bam'

    output:
        sieved_index    = 'results/deeptools/{sample}_{nucleosome}_sieved_sorted.bam.bai'

    shell:
        '''
        samtools index {input.sieved_sorted} -@ {threads} > {log} 2>&1
        '''
